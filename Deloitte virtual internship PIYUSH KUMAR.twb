<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.1h1vov317pia2j1eh4am21y05rqv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.028i8dq0k71isc16h40j70n5f3vw'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/DELL/Downloads' filename='daikibo-telemetry-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.028i8dq0k71isc16h40j70n5f3vw' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unhealthy' datatype='integer' name='[Calculation_1020346842262028289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <group caption='Action (Factory)' hidden='true' name='[Action (Factory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[factory]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/DELL/AppData/Local/Temp/TableauTemp/#TableauTemp_0tdllut183bhs31c5icc11gsjwem.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/27/2025 03:53:53 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160704</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6319</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_669795E508D643F0A5EF3E411A3C1A3E'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.028i8dq0k71isc16h40j70n5f3vw' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_8141A708D4F841D6AA189D3E067AD5EB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Daikibo Telemetry Analysis' type='sheet' worksheet='Down Time per Factory' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Daikibo Telemetry Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Down Time per Device Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.1h1vov317pia2j1eh4am21y05rqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1h1vov317pia2j1eh4am21y05rqv'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1020346842262028289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1020346842262028289]' derivation='Sum' name='[sum:Calculation_1020346842262028289:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h1vov317pia2j1eh4am21y05rqv].[Action (Factory)]'>
            <groupfilter function='level-members' level='[factory]' user:ui-action-filter='[Action1_8141A708D4F841D6AA189D3E067AD5EB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1h1vov317pia2j1eh4am21y05rqv].[Action (Factory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1h1vov317pia2j1eh4am21y05rqv].[sum:Calculation_1020346842262028289:qk]</rows>
        <cols>[federated.1h1vov317pia2j1eh4am21y05rqv].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{D7DA92BA-B0CC-4176-B664-2BE1D6CF2685}' />
    </worksheet>
    <worksheet name='Down Time per Factory'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.1h1vov317pia2j1eh4am21y05rqv' />
          </datasources>
          <datasource-dependencies datasource='federated.1h1vov317pia2j1eh4am21y05rqv'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1020346842262028289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1020346842262028289]' derivation='Sum' name='[sum:Calculation_1020346842262028289:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1h1vov317pia2j1eh4am21y05rqv].[sum:Calculation_1020346842262028289:qk]</rows>
        <cols>[federated.1h1vov317pia2j1eh4am21y05rqv].[none:factory:nk]</cols>
      </table>
      <simple-id uuid='{96D68CC6-6933-4FD6-BA6B-7FE864A44C6E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Daikibo Telemetry Analysis'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48571' id='3' name='Down Time per Factory' w='97538' x='1231' y='1429'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48571' id='5' name='Down Time per Device Type' w='97538' x='1231' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97142' id='8' param='vert' type-v2='layout-flow' w='97538' x='1231' y='1429'>
                <zone fixed-size='280' h='48571' id='3' is-fixed='true' name='Down Time per Factory' w='97538' x='1231' y='1429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48571' id='5' is-fixed='true' name='Down Time per Device Type' w='97538' x='1231' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D2D0B3B1-F3A4-4BDE-9C18-1EA6681E6793}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Down Time per Factory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h1vov317pia2j1eh4am21y05rqv].[none:factory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D56B7F7C-85FE-4634-9168-C0492EDEBE39}' />
    </window>
    <window class='worksheet' name='Down Time per Device Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h1vov317pia2j1eh4am21y05rqv].[none:deviceType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F80C149-F1FB-4F6A-93CD-515018A68164}' />
    </window>
    <window class='dashboard' maximized='true' name='Daikibo Telemetry Analysis'>
      <viewpoints>
        <viewpoint name='Down Time per Device Type'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Down Time per Factory'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{3856C3AA-BD93-4644-A8E0-3DB8D9725AFA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Daikibo Telemetry Analysis' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Down Time per Device Type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWUUlEQVR4nO3d2XNbZ3rn8e/BAYidIAiCBAGCorhIohaLki1bMmW1ZcstJ5nJ0jXdmaqZ
      mqmpqamayt3kL+j7XOcumYtULqY6qa4up6s77XTLu3ZSCyVS3MAdXMAF+37OmQtZimW7LUoN
      kDTP87mRKEDnPS/r/eEsOM/7KoZhGAhhUpbd3gEhdpMEQJiaBECYmgRAmJoEQJiadbd3QHyf
      ZPjgH35OSrVz+q33ONoZQPmWdxlalXy5isvp+NbX12N3+dXHtyloFk6ce5c3jx+o947/XnIE
      EC+gwGraw0/+7F0++dk/kihUWYvPs7C8Tim7RapQpZzPkNxc5d7YLFqlwNxMjPVUnlwywXIi
      iW5AS/cAPxrsoaF7kDN9AbbSefRyns1MjtWlBWZn5siVqpRySWZiM6QLlbr1SI4A4oVZ3QH6
      OxTu3rzOnatfkE+X+Isfn+X2YpBX1DG00CEeLmSpzt9gy3WAns4qN37zz8zmnPzvv/orIk32
      p9uqpOL8/MMJ3uo2mGs8xL1f/JzTp/q4+mgG19I9plMFLC0D/J///n5d+iJHAPHCqoUkU6vg
      NbZwhQ7zo5/8RzoOD6LPf854UqU/7AYgvpXl9bPn6Ao62Sxa+JM/fg+f/dkh5wr20OVJ87ux
      FK/1tOAJRDhz6ijZ9BrLiSKvv/1HXDrXX7e+SADEC3DS4krxs59/yNk//UteO/MmvY0FHk4u
      gtLA4EAv0WOv4Xb76T8Y5o8uv8vHH/wTD1Z0Lg+eYn5xDUN5fFVgawpzJNIEisqhTj9WfxeN
      dpVE7B4ffDLKe2+/z/v/4TxzD++zmavfKZAij0KI3VTNb/HbT2/y2vmLBNw6t28/4syZgR1r
      f9cC8KRZRfm2+wRC7IxdOwXSdR1d13ereSEAuQYQJlez26BGtcBnH31M58nz+CrL3Lwfwxvu
      5bW+Zm5cvUXe6uPC4Os4bZI5sXfUaDQaJBZiKG4/RkVjbnmLC5cu4StssrC6SPj4eU61u1jO
      FmrTnBA1UpMjQLWYZnZDIxp0U6lqqFYbNlXFY1fIlnV8zU48VSuJooGmaei6jmEYGMbjn4XY
      LTUJgF4qkM9ucm9+BXuLTthVZH4pzkK6Sn9bE/Ozk6xmN+k42Y2qqqiq+nTgq6pai10Q4qXU
      9DZoIZdGVxw4bRVGH04QPHiEVq+NhekJSo4WejpasXx511MCIPaCXfseQAIg9gJ5GE58byys
      pfib/3e1ptuUAIjvjXJFY24lVdNtyk15YWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFq
      EgBhahIAYWoSAGFqEgBhajV5GM4wDErFPJUqOF1OLEaVXKGIYrHhdjkoFfLoFhtOewMyC4rY
      S2oTAK3M+MgwmXwZW1sfHZUVRtMl/N42DkVd3B4ep6RZOHfhPE1OWy2aFKImahIAi9VOT28v
      sbkFrE4HW9kK7c2ttIYjFDYn6T19gab0JMuZEo12FcMwns4JJBPTie3S6jCPVM3qARSLisvl
      Il8q0913iMRGmsk7Q7RGG2l4+qavvF9RMAxDZoYT21aPkVKbWSHKW4zcHaNEBVuTk8TyKguJ
      LEXdRnNzkDu3PqKMjcEf9GGxPL7u1jQNRVGkJFJs25OxU0s1CYBqa+L0uTfQdGiw21EMjVBX
      BautAatq4cLbAQyLlQarFKCJvaUmI1JRFBrsjmc263T++6affU2IvUO+BxCmJgEQpiYBEKYm
      ARCmJgEQpiYBEKYmARCmJgEQpiYBEKYmARCmJgEQpiYBEKYmARCmJgEQpiYBEKZWk3oArVJk
      6OonbOaqhA6/SsSS4OboAs7gAQb7W/n885vkLV7evTiIq0EqwMTeUbOi+NPnfsB6PEa8WGUx
      V+C9999ndmiIubU4PWcu4UtNEc8U6Wl2Pf1/TxbLFmI76jFSalYRllqdYzqeJNgRpFhUURQF
      m9WgoBk4rVZsDQrlivF0lfiv/inEdmjVas23WZui+Eqa9TS0Btysrm7S2lBhbOwRG1l4JeJj
      fPwe88Uch1/reVoEL+sEixdlrUNNeW2K4lUXTT4HmbKDU69EcKpVFubjdL7ag8+l0qepVGzd
      BFz2WjQnRM3U5hTIYqWt4wBtX9nsge7upz8Fw521aEaImpPboMLUJADC1CQAwtQkAMLUJADC
      1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1GpTYWAYFLJJNtJFAsEgNr3I
      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
      YwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Down Time per Factory' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
